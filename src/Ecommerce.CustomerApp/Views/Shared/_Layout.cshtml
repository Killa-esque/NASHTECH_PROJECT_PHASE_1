<!DOCTYPE html>
<html lang="vi" class="h-full" id="html-root">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>@ViewData["Title"] - Sweet Bakery</title>

  <!-- Tailwind CSS -->
  <link href="~/css/styles.css" rel="stylesheet" asp-append-version="true" />
  <link rel="stylesheet" href="~/css/swiper-bundle.min.css" />

  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
</head>

<body class="bg-amber-50 dark:bg-gray-800 text-gray-800 dark:text-yellow-100">
  <div class="min-h-full">
    <!-- Header -->
    @await Html.PartialAsync("_Header")

    @await Html.PartialAsync("_Banner")

    <!-- Main content -->
    <main class="container mx-auto px-4 sm:px-10 py-8">
      <div>
        @RenderBody()
      </div>
    </main>
  </div>

  <div id="toast-container" class="toast toast-top toast-end fixed z-50 p-4 space-y-2"></div>

  <!-- Footer -->
  @await Html.PartialAsync("_Footer")

  <!-- JS -->
  <script src="~/js/theme-toggle.js"></script>
  <script src="~/js/swiper-bundle.min.js"></script>
  @RenderSection("Scripts", required: false)

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      updateCartIcon();
    });

    var swiper = new Swiper(".mySwiper", {
      slidesPerView: 3,
      spaceBetween: 30,
      freeMode: true,
      pagination: {
        el: ".swiper-pagination",
        clickable: true,
      },
    });

    function showToast(message, type = 'success') {
      const colors = {
        success: 'bg-green-500 text-white',
        error: 'bg-red-600 text-white',
        info: 'bg-blue-500 text-white',
        warning: 'bg-yellow-400 text-black'
      };

      const toast = document.createElement('div');
      toast.className = `alert ${colors[type]} shadow-lg`;
      toast.innerHTML = `
            <span>${message}</span>
        `;

      const container = document.getElementById('toast-container');
      container.appendChild(toast);

      setTimeout(() => {
        toast.remove();
      }, 3000);
    }

    async function updateCartIcon() {
      try {
        const response = await fetch('/Cart/GetCartSummary', {
          method: 'GET',
          headers: {
            'X-Requested-With': 'XMLHttpRequest'
          }
        });

        const result = await response.json();
        if (result.success) {
          // Cập nhật số lượng sản phẩm
          const counter = document.getElementById('cartCounter');
          if (counter) {
            counter.textContent = result.totalItems || 0;
          }

          // Cập nhật tóm tắt giỏ hàng
          const summary = document.getElementById('cartSummary');
          if (summary) {
            summary.textContent = `${result.totalItems || 0} sản phẩm`;
          }

          // Cập nhật danh sách sản phẩm trong dropdown
          const miniCart = document.getElementById('miniCartItems');
          if (miniCart) {
            miniCart.innerHTML = '';
            if (result.items && result.items.length > 0) {
              result.items.forEach(item => {
                const itemHtml = `
                                <div class="py-2 flex gap-3 items-center">
                                    <img src="${item.imageUrl || '/img/mini-cake.jpg'}" class="w-12 h-12 rounded object-cover" />
                                    <div class="flex-1 text-sm text-yellow-800 dark:text-yellow-100">
                                        <p>${item.productName} x ${item.quantity}</p>
                                        <p class="text-xs">${(item.price * item.quantity).toLocaleString('vi-VN')} ₫</p>
                                    </div>
                                </div>
                            `;
                miniCart.innerHTML += itemHtml;
              });
            } else {
              miniCart.innerHTML = '<p class="text-sm text-yellow-800 dark:text-yellow-100">Giỏ hàng trống</p>';
            }
          }
        } else {
          console.error('Failed to fetch cart summary:', result.message);
        }
      } catch (error) {
        console.error('Error updating cart icon:', error);
      }
    }

    async function addToCart(productId, quantity) {
      try {
        const response = await fetch('/Cart/AddToCart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify({ productId, quantity: parseInt(quantity) })
        });

        const result = await response.json();
        if (result.success) {
          showToast(`Đã thêm sản phẩm vào giỏ hàng! Tổng số lượng: ${result.totalItems}`, 'success');
          updateCartIcon(); // Cập nhật CartIcon sau khi thêm sản phẩm
        } else {
          showToast(result.message, 'error');
        }
      } catch (error) {
        console.error('Error adding to cart:', error);
        showToast('Đã xảy ra lỗi khi thêm sản phẩm vào giỏ hàng', 'error');
      }
    }
  </script>

</body>

</html>
