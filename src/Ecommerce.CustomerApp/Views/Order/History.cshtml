@using Ecommerce.Shared.ViewModels
@using Ecommerce.Shared.Common
@model PagedResult<OrderViewModel>
<section class="bg-white dark:bg-gray-900 py-20 px-6">
  <div class="max-w-5xl mx-auto">
    <h1 class="text-3xl font-bold text-yellow-900 dark:text-yellow-300 mb-10 text-center">
      üßæ L·ªãch s·ª≠ ƒë∆°n h√†ng c·ªßa b·∫°n
    </h1>

    @if (Model.Items == null || !Model.Items.Any())
    {
      <p class="text-center text-yellow-800 dark:text-yellow-100">B·∫°n ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>
    }
    else
    {
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        @foreach (var order in Model.Items)
        {
          <div
            class="card @(order.Status == "Cancelled" ? "bg-gray-200 dark:bg-gray-700" : "bg-amber-50 dark:bg-gray-800") shadow-md">
            <div class="card-body">
              <div class="flex justify-between items-start">
                <h2
                  class="card-title @(order.Status == "Cancelled" ? "text-gray-800 dark:text-gray-200" : "text-yellow-900 dark:text-yellow-200")">
                  ƒê∆°n h√†ng #@order.OrderCode
                </h2>
                <span
                  class="badge @(order.Status == "Paid" ? "bg-green-600" : order.Status == "Pending" ? "bg-yellow-500" : "bg-gray-500") text-white">@order.Status</span>
              </div>

              <p
                class="text-sm @(order.Status == "Cancelled" ? "text-gray-700 dark:text-gray-200" : "text-yellow-800 dark:text-yellow-100")">
                Ng√†y ƒë·∫∑t: @order.CreatedDate.ToString("dd/MM/yyyy HH:mm")<br />
                T·ªïng c·ªông: <strong>@order.TotalAmount.ToString("N0") ‚Ç´</strong><br />
                Ph∆∞∆°ng th·ª©c: <strong>@order.PaymentMethod</strong>
              </p>

              <div
                class="text-sm @(order.Status == "Cancelled" ? "text-gray-700 dark:text-gray-200" : "text-yellow-800 dark:text-yellow-100")">
                üìç Giao t·ªõi: <em>@order.ShippingAddress</em>
              </div>

              <div class="card-actions justify-between mt-4">
                <a href="/Order/Detail/@order.Id"
                  class="btn btn-sm @(order.Status == "Cancelled" ? "btn-outline" : "bg-yellow-800 text-white")">Xem chi
                  ti·∫øt</a>
                @if (order.Status == "Pending")
                {
                  <button data-order-id="@order.Id"
                    class="btn btn-sm bg-red-600 text-white">H·ªßy ƒë∆°n</button>
                }
              </div>
            </div>
          </div>
        }
      </div>

      <div class="mt-8 flex justify-center">
        <div class="join">
          <a href="/Order/History?pageIndex=@(Model.PageIndex - 1)&pageSize=@Model.PageSize"
            class="join-item btn btn-outline @(Model.PageIndex <= 1 ? "btn-disabled" : "")">¬´</a>
          <button class="join-item btn btn-outline">Trang @Model.PageIndex</button>
          <a href="/Order/History?pageIndex=@(Model.PageIndex + 1)&pageSize=@Model.PageSize"
            class="join-item btn btn-outline @(Model.PageIndex >= Model.TotalPages ? "btn-disabled" : "")">¬ª</a>
        </div>
      </div>
    }
  </div>
</section>

@section Scripts {
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function () {
      $('.cancel-order').on('click', function () {
        const orderId = $(this).data('order-id');
        if (!orderId) {
          showToast('ID ƒë∆°n h√†ng kh√¥ng h·ª£p l·ªá.', 'error');
          return;
        }

        if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒë∆°n h√†ng n√†y?')) {
          $.ajax({
            url: '/Order/Cancel',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ orderId: orderId }),
            success: function (response) {
              console.log('CancelOrder response:', JSON.stringify(response, null, 2));
              if (response.status) {
                showToast(response.message, 'success');
                location.reload(); // T·∫£i l·∫°i trang ƒë·ªÉ c·∫≠p nh·∫≠t danh s√°ch
              } else {
                showToast('L·ªói: ' + response.message, 'error');
              }
            },
            error: function (xhr, status, error) {
              console.error('CancelOrder error:', xhr, status, error);
              showToast('Kh√¥ng th·ªÉ h·ªßy ƒë∆°n h√†ng: ' + error, 'error');
            }
          });
        }
      });
    });
  </script>
}
