@using Ecommerce.Shared.ViewModels
@model OrderViewModel

<section class="bg-white dark:bg-gray-900 py-20 px-6">
  <div class="max-w-4xl mx-auto">
    @if (Model == null)
    {
      <div class="alert alert-error mb-6 text-center">
        <span>Lỗi: Không thể tải chi tiết đơn hàng. Vui lòng thử lại.</span>
      </div>
      <div class="text-center">
        <a href="/Order/History" class="btn btn-outline text-yellow-900 dark:text-yellow-300">🔙 Quay lại lịch sử đơn
          hàng</a>
      </div>
    }
    else
    {
      @* @if (TempData["Error"] != null)
      {
        <div class="alert alert-error mb-6 text-center">
          <span>@TempData["Error"]</span>
        </div>
      } *@

      <h1 class="text-3xl font-bold text-yellow-900 dark:text-yellow-300 mb-8 text-center">
        📦 Chi tiết đơn hàng <span class="text-yellow-700 dark:text-yellow-200">#@Model.OrderCode</span>
      </h1>

      <div class="mb-6 text-center">
        <span class="badge badge-lg @(Model.Status == "Paid" ? "bg-green-600" : 
                                                      Model.Status == "Pending" ? "bg-yellow-500" : 
                                                      Model.Status == "Cancelled" ? "bg-red-600" : 
                                                      Model.Status == "Processing" ? "bg-blue-500" : 
                                                      Model.Status == "Delivered" ? "bg-teal-600" : 
                                                      "bg-gray-500") text-white">
          @(Model.Status switch
          {
            "Paid" => "Đã thanh toán",
            "Pending" => "Đang chờ xử lý",
            "Cancelled" => "Đã hủy",
            "Processing" => "Đang xử lý",
            "Delivered" => "Đã giao",
            _ => Model.Status
          })
      </span>
    </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-10">
        <div class="space-y-2">
          <h2 class="font-semibold text-yellow-900 dark:text-yellow-300">📍 Địa chỉ giao hàng</h2>
          <p class="text-yellow-800 dark:text-yellow-100">@Model.ShippingAddress</p>
        </div>

        <div class="space-y-2">
          <h2 class="font-semibold text-yellow-900 dark:text-yellow-300">📆 Thời gian đặt</h2>
          <p class="text-yellow-800 dark:text-yellow-100">@Model.CreatedDate.ToString("dd/MM/yyyy HH:mm")</p>
          <h2 class="font-semibold text-yellow-900 dark:text-yellow-300">📅 Thời gian giao hàng</h2>
          <p class="text-yellow-800 dark:text-yellow-100">
            @(Model.DeliveryDate.HasValue ? Model.DeliveryDate.Value.ToString("dd/MM/yyyy HH:mm") : "Chưa xác định")
          </p>
          <h2 class="font-semibold text-yellow-900 dark:text-yellow-300">💳 Phương thức thanh toán</h2>
          <p class="text-yellow-800 dark:text-yellow-100">
            @(Model.PaymentMethod switch
            {
              "cod" => "Tiền mặt khi nhận hàng",
              "bank" => "Chuyển khoản ngân hàng",
              "momo" => "Ví điện tử (Momo)",
              _ => Model.PaymentMethod
            })
        </p>
      </div>
    </div>

      <div class="mb-8">
        <h2 class="font-semibold text-yellow-900 dark:text-yellow-300 mb-4">🧁 Sản phẩm đã đặt</h2>
        <div class="space-y-3">
        @foreach (var item in Model.Items ?? new List<OrderItemViewModel>())
          {
            <div class="flex justify-between text-yellow-800 dark:text-yellow-100">
              <span>@item.ProductName x @item.Quantity</span>
              <span>@((item.Price * item.Quantity).ToString("N0")) $</span>
            </div>
          }
        </div>
        <div class="divider my-4"></div>
        <div class="flex justify-between font-semibold text-yellow-900 dark:text-yellow-100 text-lg mt-2">
          <span>Tổng cộng</span>
          <span>@Model.TotalAmount.ToString("N0") $</span>
        </div>
      </div>

      @if (!string.IsNullOrEmpty(Model.Note))
      {
        <div class="mb-8">
          <h2 class="font-semibold text-yellow-900 dark:text-yellow-300 mb-2">📝 Ghi chú đơn hàng</h2>
          <p class="text-yellow-800 dark:text-yellow-100 italic">@Model.Note</p>
        </div>
      }

      <div class="text-center mt-8 flex justify-center gap-4">
        <a href="/" class="btn btn-outline text-yellow-900 dark:text-yellow-300">🏠 Về trang chủ</a>
        <button id="print-order" class="btn bg-yellow-800 text-white">🖨 In đơn hàng</button>
        @if (Model.Status == "Pending")
        {
          <button id="cancel-order" class="btn bg-red-600 text-white" data-order-id="@Model.Id">❌ Hủy đơn hàng</button>
        }
      </div>
    }
  </div>
</section>

@section Scripts {
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function () {
      // In đơn hàng
      $('#print-order').on('click', function () {
        window.print();
      });

      // Hủy đơn hàng
      $('#cancel-order').on('click', function () {
        const orderId = $(this).data('order-id');
        console.log('Cancel order ID:', orderId);
        if (!orderId) {
          showToast('Lỗi: ID đơn hàng không hợp lệ.', 'error');
          return;
        }

        $.ajax({
          url: '/Order/Cancel',
          type: 'POST',
          contentType: 'application/json',
          data: JSON.stringify({ OrderId: orderId }),
          success: function (response) {
            if (response.status) {
              showToast(response.message, 'success');
              // Cập nhật trạng thái trên UI
              $('.badge')
                .removeClass('bg-yellow-500')
                .addClass('bg-red-600')
                .text('Đã hủy');
              $('#cancel-order').remove(); // Xóa nút hủy
            } else {
              showToast('Lỗi: ' + response.message, 'error');
            }
          },
          error: function (xhr, status, error) {
            console.error('CancelOrder error:', xhr, status, error);
            showToast('Không thể hủy đơn hàng: ' + error, 'error');
          }
        });
      });
    });
  </script>
}
