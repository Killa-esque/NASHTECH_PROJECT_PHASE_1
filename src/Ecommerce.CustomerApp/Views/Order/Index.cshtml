@using Ecommerce.Shared.ViewModels
@using System.Text.Json
@model OrderViewModel

<section class="bg-white dark:bg-gray-800 py-20">
  <div class="max-w-5xl mx-auto px-6">
    <div class="text-center mb-12">
      <h1 class="text-3xl font-bold text-yellow-900 dark:text-yellow-300 mb-2">
        üßæ ƒê·∫∑t b√°nh c·ªßa b·∫°n
      </h1>
      <p class="text-yellow-800 dark:text-yellow-300">ƒêi·ªÅn th√¥ng tin v√† x√°c nh·∫≠n ƒë∆°n h√†ng b√™n d∆∞·ªõi nh√©!</p>
    </div>

    <form id="order-form" asp-controller="Order" asp-action="Submit" method="post">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-10">
        <!-- Th√¥ng tin giao h√†ng -->
        <div class="space-y-6">
          <div class="form-control">
            <label class="label">
              <span class="label-text text-yellow-800 dark:text-yellow-300">ƒê·ªãa ch·ªâ giao h√†ng</span>
            </label>
            <textarea id="shippingAddress" name="ShippingAddress"
              class="textarea textarea-bordered bg-amber-50 dark:bg-gray-700 text-yellow-900 dark:text-yellow-100"
              rows="3" placeholder="123 ƒë∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM">@Model.ShippingAddress</textarea>
            <span class="text-red-600 text-sm error" id="shippingAddressError"></span>
          </div>

          <div class="form-control">
            <label class="label">
              <span class="label-text text-yellow-800 dark:text-yellow-300">Ghi ch√∫ th√™m</span>
            </label>
            <textarea id="note" name="Note"
              class="textarea textarea-bordered bg-amber-50 dark:bg-gray-700 text-yellow-900 dark:text-yellow-100"
              rows="2" placeholder="Kh√¥ng cay, b√°nh cho tr·∫ª em, t·∫∑ng ng∆∞·ªùi y√™u...">@Model.Note</textarea>
            <span class="text-red-600 text-sm error" id="noteError"></span>
          </div>

          <div class="form-control">
            <label class="label">
              <span class="label-text text-yellow-800 dark:text-yellow-300">Ph∆∞∆°ng th·ª©c thanh to√°n</span>
            </label>
            <select id="paymentMethod" name="PaymentMethod"
              class="select select-bordered bg-amber-50 dark:bg-gray-700 text-yellow-900 dark:text-yellow-100">
              <option value="cod" selected="@(Model.PaymentMethod == "cod")">Ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng</option>
              <option value="bank" selected="@(Model.PaymentMethod == "bank")">Chuy·ªÉn kho·∫£n ng√¢n h√†ng</option>
              <option value="momo" selected="@(Model.PaymentMethod == "momo")">V√≠ ƒëi·ªán t·ª≠ (Momo)</option>
            </select>
            <span class="text-red-600 text-sm error" id="paymentMethodError"></span>
          </div>
        </div>

        <!-- Danh s√°ch s·∫£n ph·∫©m -->
        <div class="bg-amber-50 dark:bg-gray-700 rounded-xl p-6 space-y-4 shadow">
          <h2 class="text-xl font-semibold text-yellow-900 dark:text-yellow-100">üßÅ ƒê∆°n h√†ng c·ªßa b·∫°n</h2>
          <div id="order-items" class="space-y-2">
            @foreach (var item in Model.Items)
            {
              <div class="flex justify-between text-yellow-800 dark:text-yellow-100">
                <span>@item.ProductName x @item.Quantity</span>
                <span>@((item.Price * item.Quantity).ToString("N0")) $</span>
              </div>
            }
          </div>
          <div class="flex justify-between font-semibold text-yellow-900 dark:text-yellow-100 text-lg">
            <span>T·ªïng c·ªông</span>
            <span id="totalAmount">@Model.TotalAmount.ToString("N0") $</span>
            <input type="hidden" id="totalAmountInput" name="TotalAmount" value="@Model.TotalAmount" />
          </div>

          <div class="form-control">
            <label class="cursor-pointer label justify-start gap-2">
              <input type="checkbox" id="agreePolicy" class="checkbox checkbox-warning" required />
              <span class="label-text text-yellow-900 dark:text-yellow-100">T√¥i ƒë·ªìng √Ω v·ªõi <a href="#"
                  class="underline">ch√≠nh s√°ch ƒë·∫∑t h√†ng</a></span>
            </label>
            <span class="text-red-600 text-sm error" id="agreePolicyError"></span>
          </div>

          <button type="button" id="confirm-order"
            class="btn w-full mt-4 bg-yellow-800 hover:bg-yellow-700 dark:bg-yellow-700 dark:hover:bg-yellow-600 text-white">
            ‚úÖ ƒê·∫∑t b√°nh ngay
          </button>
        </div>
      </div>
    </form>

    <dialog id="confirm-modal" class="modal">
      <div class="modal-box bg-white dark:bg-gray-800 text-yellow-900 dark:text-yellow-100">
        <h3 class="font-bold text-lg">X√°c nh·∫≠n ƒë·∫∑t b√°nh</h3>
        <p class="py-2">B·∫°n ch·∫Øc ch·∫Øn mu·ªën ƒë·∫∑t ƒë∆°n b√°nh n√†y ch·ª©?</p>
        <div class="modal-action">
          <form method="dialog" class="flex gap-2">
            <button class="btn">‚ùå H·ªßy</button>
            <button type="button" id="proceed-submit" class="btn bg-yellow-800 text-white">‚úÖ X√°c nh·∫≠n</button>
          </form>
        </div>
      </div>
    </dialog>

    <dialog id="qr-modal" class="modal">
      <div class="modal-box bg-white dark:bg-gray-800 text-yellow-900 dark:text-yellow-100">
        <h3 class="font-bold text-lg">üîÅ Thanh to√°n chuy·ªÉn kho·∫£n</h3>
        <p class="py-2">Vui l√≤ng qu√©t m√£ QR ƒë·ªÉ ho√†n t·∫•t thanh to√°n:</p>
        <img src="/img/qr-demo.png" alt="QR Code" class="w-60 h-60 mx-auto rounded-lg shadow" />
        <p class="text-sm text-center mt-3">N·ªôi dung: <strong id="qr-transaction-id">Thanh to√°n SBXXXX</strong></p>
        <div class="modal-action justify-center">
          <form method="dialog">
            <button id="qr-completed" class="btn btn-sm bg-yellow-800 text-white">T√¥i ƒë√£ thanh to√°n</button>
          </form>
        </div>
      </div>
    </dialog>
  </div>
</section>

@section Scripts {
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function () {
      const confirmBtn = $('#confirm-order');
      const modal = $('#confirm-modal');
      const qrModal = $('#qr-modal');
      const form = $('#order-form');
      const submitBtn = $('#proceed-submit');
      const qrCompletedBtn = $('#qr-completed');

      confirmBtn.on('click', function () {
        if (validateForm()) {
          modal[0].showModal();
        }
      });

      submitBtn.on('click', function (e) {
        e.preventDefault();
        const method = $('#paymentMethod').val();
        if (method === 'bank' || method === 'momo') {
          modal[0].close();
          qrModal[0].showModal();
        } else {
          submitOrder(method);
        }
      });

      qrCompletedBtn.on('click', function () {
        submitOrder('qr-completed');
      });

      function validateForm() {
        $('.error').text('');
        let isValid = true;

        if (!$('#shippingAddress').val()) {
          $('#shippingAddressError').text('ƒê·ªãa ch·ªâ giao h√†ng l√† b·∫Øt bu·ªôc.');
          isValid = false;
        }
        if (!$('#paymentMethod').val()) {
          $('#paymentMethodError').text('Ph∆∞∆°ng th·ª©c thanh to√°n l√† b·∫Øt bu·ªôc.');
          isValid = false;
        }
        if (!$('#agreePolicy').is(':checked')) {
          $('#agreePolicyError').text('B·∫°n ph·∫£i ƒë·ªìng √Ω v·ªõi ch√≠nh s√°ch ƒë·∫∑t h√†ng.');
          isValid = false;
        }

        if (!isValid) {
          showToast('Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin.', 'error');
        }
        return isValid;
      }

      function submitOrder(method) {
        const orderData = {
          shippingAddress: $('#shippingAddress').val(),
          paymentMethod: $('#paymentMethod').val(),
          note: $('#note').val(),
          totalAmount: parseFloat($('#totalAmountInput').val()),
          items: @Html.Raw(JsonSerializer.Serialize(Model.Items.Select(i => new { ProductId = i.Id, i.ProductName, i.Quantity, i.Price })))
            };

        console.log('Sending POST /Order/Submit with data:', JSON.stringify(orderData, null, 2));
        $.ajax({
          url: '/Order/Submit',
          type: 'POST',
          contentType: 'application/json',
          data: JSON.stringify(orderData),
          success: function (response) {
            console.log('SubmitOrder response:', JSON.stringify(response, null, 2));
            if (response.status) {
              modal[0].close();
              qrModal[0].close();
              $('#qr-transaction-id').text(`Thanh to√°n ${response.data}`);
              showToast(response.message, 'success');
              window.location.href = `/Order/Success?orderId=${response.data}`;
            } else {
              showToast('L·ªói: ' + response.message, 'error');
              if (response.errors) {
                response.errors.forEach(error => {
                  if (error.toLowerCase().includes('shippingaddress')) $('#shippingAddressError').text(error);
                  if (error.toLowerCase().includes('paymentmethod')) $('#paymentMethodError').text(error);
                });
              }
            }
          },
          error: function (xhr, status, error) {
            console.error('SubmitOrder error:', xhr, status, error);
            showToast('Kh√¥ng th·ªÉ ƒë·∫∑t h√†ng: ' + error, 'error');
          }
        });
      }
    });
  </script>
}
