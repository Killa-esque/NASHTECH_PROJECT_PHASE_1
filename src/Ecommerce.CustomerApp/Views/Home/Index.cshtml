@using Ecommerce.Shared.ViewModels
@{
    ViewData["Title"] = "Trang ch·ªß";
    var featuredProducts = Model as List<ProductViewModel>;
    var categories = ViewBag.Categories as List<CategoryViewModel>;
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var hasError = !string.IsNullOrEmpty(ViewBag.Error);
}

<!-- Carousel -->
@await Html.PartialAsync("_Carousel")

<!-- Hero Section -->
<section class="bg-amber-50 dark:bg-gray-800 py-10">
    <div class="max-w-6xl mx-auto px-6 text-center">
        <h1 class="text-4xl font-extrabold text-yellow-900 dark:text-yellow-300 mb-4">
            V·ªã ng·ªçt lan t·ªèa t·ª´ nh·ªØng chi·∫øc b√°nh th·ªß c√¥ng üçû
        </h1>
        <p class="text-lg text-amber-800 dark:text-gray-300 mb-6">
            Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ti·ªám b√°nh c·ªßa ch√∫ng t√¥i ‚Äî n∆°i h∆∞∆°ng v·ªã v√† c·∫£m x√∫c h·ªôi t·ª•!
        </p>
        <a href="/Product"
            class="inline-block bg-yellow-800 hover:bg-yellow-700 text-white px-6 py-3 rounded-lg font-medium transition">
            Kh√°m ph√° menu
        </a>
        <p class="italic text-sm text-gray-500 dark:text-gray-400 mt-4 max-w-md mx-auto">
            ‚ÄúChi·∫øc b√°nh Chocolate m√¨nh ƒë·∫∑t h√¥m sinh nh·∫≠t l√† ngon nh·∫•t t·ª´ tr∆∞·ªõc ƒë·∫øn nay!‚Äù ‚Äî m·ªôt kh√°ch h√†ng th√¢n thi·∫øt
        </p>

    </div>
</section>

<!-- Divider -->
<div class="my-12 border-t border-amber-400 dark:border-gray-700 w-1/2 mx-auto"></div>

<!-- Featured Products -->
<section id="featured-products" class="bg-amber-50 dark:bg-gray-800 py-10">
    <div class="container mx-auto px-6">
        <!-- Section Header -->
        <div class="text-center mb-12">
            <h2 class="text-4xl font-bold text-yellow-900 dark:text-yellow-300 mb-3">
                B√°nh n·ªïi b·∫≠t trong tu·∫ßn ü•ê
            </h2>
            <p class="text-lg text-yellow-800 dark:text-yellow-300 max-w-xl mx-auto">
                T·ª´ng chi·∫øc b√°nh l√† m·ªôt c√¢u chuy·ªán ng·ªçt ng√†o, ƒë∆∞·ª£c ch·ªçn l·ªçc b·ªüi kh√°ch h√†ng th√¢n thi·∫øt!
            </p>
        </div>

        <!-- Error/Empty State -->
        @if (hasError)
        {
            <div class="alert alert-error mb-6 justify-center">
                <span>@ViewBag.Error</span>
            </div>
        }
        else if (!(featuredProducts?.Any() == true))
        {
            <div class="alert alert-info mb-6 justify-center">
                <span>Hi·ªán t·∫°i ch∆∞a c√≥ s·∫£n ph·∫©m n·ªïi b·∫≠t n√†o.</span>
            </div>
        }
        else
        {
            <!-- Product Grid -->
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-8">
                @foreach (var product in featuredProducts)
                {
                    @await Html.PartialAsync("_ProductCard", product)
                }
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <div class="flex justify-center mt-12">
                    <div class="join">
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            var isActive = i == currentPage;
                            <a href="/?page=@i#featured-products"
                                class="join-item btn btn-sm @(isActive
                                                                                                    ? "bg-yellow-800 text-white dark:bg-yellow-600"
                                                                                                    : "bg-amber-100 text-amber-800 hover:bg-amber-200 dark:bg-gray-700 dark:text-yellow-300 dark:hover:bg-gray-600")">
                    @i
                </a>
                                }
                    </div>
                </div>
            }
        }
    </div>
</section>
